/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as Char123LocaleChar125IndexRouteImport } from './routes/{-$locale}/index'
import { Route as Char123LocaleChar125CreateTripRouteImport } from './routes/{-$locale}/create-trip'
import { Route as Char123LocaleChar125TripTravelIdRouteImport } from './routes/{-$locale}/trip/$travelId'
import { Route as Char123LocaleChar125InviteTokenRouteImport } from './routes/{-$locale}/invite/$token'
import { Route as Char123LocaleChar125AuthLoginRouteImport } from './routes/{-$locale}/auth/login'
import { Route as Char123LocaleChar125TripTravelIdIndexRouteImport } from './routes/{-$locale}/trip/$travelId/index'
import { Route as Char123LocaleChar125TripTravelIdSettingsIndexRouteImport } from './routes/{-$locale}/trip/$travelId/settings/index'
import { Route as Char123LocaleChar125TripTravelIdMembersIndexRouteImport } from './routes/{-$locale}/trip/$travelId/members/index'
import { Route as Char123LocaleChar125TripTravelIdLocationsIndexRouteImport } from './routes/{-$locale}/trip/$travelId/locations/index'
import { Route as Char123LocaleChar125TripTravelIdFlightsIndexRouteImport } from './routes/{-$locale}/trip/$travelId/flights/index'
import { Route as Char123LocaleChar125TripTravelIdFinancialIndexRouteImport } from './routes/{-$locale}/trip/$travelId/financial/index'
import { Route as Char123LocaleChar125TripTravelIdConciergeIndexRouteImport } from './routes/{-$locale}/trip/$travelId/concierge/index'
import { Route as Char123LocaleChar125TripTravelIdAccommodationsIndexRouteImport } from './routes/{-$locale}/trip/$travelId/accommodations/index'
import { ServerRoute as ApiSplatServerRouteImport } from './routes/api.$'
import { ServerRoute as ApiRpcSplatServerRouteImport } from './routes/api.rpc.$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'

const rootServerRouteImport = createServerRootRoute()

const Char123LocaleChar125IndexRoute =
  Char123LocaleChar125IndexRouteImport.update({
    id: '/{-$locale}/',
    path: '/{-$locale}/',
    getParentRoute: () => rootRouteImport,
  } as any)
const Char123LocaleChar125CreateTripRoute =
  Char123LocaleChar125CreateTripRouteImport.update({
    id: '/{-$locale}/create-trip',
    path: '/{-$locale}/create-trip',
    getParentRoute: () => rootRouteImport,
  } as any)
const Char123LocaleChar125TripTravelIdRoute =
  Char123LocaleChar125TripTravelIdRouteImport.update({
    id: '/{-$locale}/trip/$travelId',
    path: '/{-$locale}/trip/$travelId',
    getParentRoute: () => rootRouteImport,
  } as any)
const Char123LocaleChar125InviteTokenRoute =
  Char123LocaleChar125InviteTokenRouteImport.update({
    id: '/{-$locale}/invite/$token',
    path: '/{-$locale}/invite/$token',
    getParentRoute: () => rootRouteImport,
  } as any)
const Char123LocaleChar125AuthLoginRoute =
  Char123LocaleChar125AuthLoginRouteImport.update({
    id: '/{-$locale}/auth/login',
    path: '/{-$locale}/auth/login',
    getParentRoute: () => rootRouteImport,
  } as any)
const Char123LocaleChar125TripTravelIdIndexRoute =
  Char123LocaleChar125TripTravelIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdSettingsIndexRoute =
  Char123LocaleChar125TripTravelIdSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdMembersIndexRoute =
  Char123LocaleChar125TripTravelIdMembersIndexRouteImport.update({
    id: '/members/',
    path: '/members/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdLocationsIndexRoute =
  Char123LocaleChar125TripTravelIdLocationsIndexRouteImport.update({
    id: '/locations/',
    path: '/locations/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdFlightsIndexRoute =
  Char123LocaleChar125TripTravelIdFlightsIndexRouteImport.update({
    id: '/flights/',
    path: '/flights/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdFinancialIndexRoute =
  Char123LocaleChar125TripTravelIdFinancialIndexRouteImport.update({
    id: '/financial/',
    path: '/financial/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdConciergeIndexRoute =
  Char123LocaleChar125TripTravelIdConciergeIndexRouteImport.update({
    id: '/concierge/',
    path: '/concierge/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const Char123LocaleChar125TripTravelIdAccommodationsIndexRoute =
  Char123LocaleChar125TripTravelIdAccommodationsIndexRouteImport.update({
    id: '/accommodations/',
    path: '/accommodations/',
    getParentRoute: () => Char123LocaleChar125TripTravelIdRoute,
  } as any)
const ApiSplatServerRoute = ApiSplatServerRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRpcSplatServerRoute = ApiRpcSplatServerRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/{-$locale}/create-trip': typeof Char123LocaleChar125CreateTripRoute
  '/{-$locale}': typeof Char123LocaleChar125IndexRoute
  '/{-$locale}/auth/login': typeof Char123LocaleChar125AuthLoginRoute
  '/{-$locale}/invite/$token': typeof Char123LocaleChar125InviteTokenRoute
  '/{-$locale}/trip/$travelId': typeof Char123LocaleChar125TripTravelIdRouteWithChildren
  '/{-$locale}/trip/$travelId/': typeof Char123LocaleChar125TripTravelIdIndexRoute
  '/{-$locale}/trip/$travelId/accommodations': typeof Char123LocaleChar125TripTravelIdAccommodationsIndexRoute
  '/{-$locale}/trip/$travelId/concierge': typeof Char123LocaleChar125TripTravelIdConciergeIndexRoute
  '/{-$locale}/trip/$travelId/financial': typeof Char123LocaleChar125TripTravelIdFinancialIndexRoute
  '/{-$locale}/trip/$travelId/flights': typeof Char123LocaleChar125TripTravelIdFlightsIndexRoute
  '/{-$locale}/trip/$travelId/locations': typeof Char123LocaleChar125TripTravelIdLocationsIndexRoute
  '/{-$locale}/trip/$travelId/members': typeof Char123LocaleChar125TripTravelIdMembersIndexRoute
  '/{-$locale}/trip/$travelId/settings': typeof Char123LocaleChar125TripTravelIdSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/{-$locale}/create-trip': typeof Char123LocaleChar125CreateTripRoute
  '/{-$locale}': typeof Char123LocaleChar125IndexRoute
  '/{-$locale}/auth/login': typeof Char123LocaleChar125AuthLoginRoute
  '/{-$locale}/invite/$token': typeof Char123LocaleChar125InviteTokenRoute
  '/{-$locale}/trip/$travelId': typeof Char123LocaleChar125TripTravelIdIndexRoute
  '/{-$locale}/trip/$travelId/accommodations': typeof Char123LocaleChar125TripTravelIdAccommodationsIndexRoute
  '/{-$locale}/trip/$travelId/concierge': typeof Char123LocaleChar125TripTravelIdConciergeIndexRoute
  '/{-$locale}/trip/$travelId/financial': typeof Char123LocaleChar125TripTravelIdFinancialIndexRoute
  '/{-$locale}/trip/$travelId/flights': typeof Char123LocaleChar125TripTravelIdFlightsIndexRoute
  '/{-$locale}/trip/$travelId/locations': typeof Char123LocaleChar125TripTravelIdLocationsIndexRoute
  '/{-$locale}/trip/$travelId/members': typeof Char123LocaleChar125TripTravelIdMembersIndexRoute
  '/{-$locale}/trip/$travelId/settings': typeof Char123LocaleChar125TripTravelIdSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/{-$locale}/create-trip': typeof Char123LocaleChar125CreateTripRoute
  '/{-$locale}/': typeof Char123LocaleChar125IndexRoute
  '/{-$locale}/auth/login': typeof Char123LocaleChar125AuthLoginRoute
  '/{-$locale}/invite/$token': typeof Char123LocaleChar125InviteTokenRoute
  '/{-$locale}/trip/$travelId': typeof Char123LocaleChar125TripTravelIdRouteWithChildren
  '/{-$locale}/trip/$travelId/': typeof Char123LocaleChar125TripTravelIdIndexRoute
  '/{-$locale}/trip/$travelId/accommodations/': typeof Char123LocaleChar125TripTravelIdAccommodationsIndexRoute
  '/{-$locale}/trip/$travelId/concierge/': typeof Char123LocaleChar125TripTravelIdConciergeIndexRoute
  '/{-$locale}/trip/$travelId/financial/': typeof Char123LocaleChar125TripTravelIdFinancialIndexRoute
  '/{-$locale}/trip/$travelId/flights/': typeof Char123LocaleChar125TripTravelIdFlightsIndexRoute
  '/{-$locale}/trip/$travelId/locations/': typeof Char123LocaleChar125TripTravelIdLocationsIndexRoute
  '/{-$locale}/trip/$travelId/members/': typeof Char123LocaleChar125TripTravelIdMembersIndexRoute
  '/{-$locale}/trip/$travelId/settings/': typeof Char123LocaleChar125TripTravelIdSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/{-$locale}/create-trip'
    | '/{-$locale}'
    | '/{-$locale}/auth/login'
    | '/{-$locale}/invite/$token'
    | '/{-$locale}/trip/$travelId'
    | '/{-$locale}/trip/$travelId/'
    | '/{-$locale}/trip/$travelId/accommodations'
    | '/{-$locale}/trip/$travelId/concierge'
    | '/{-$locale}/trip/$travelId/financial'
    | '/{-$locale}/trip/$travelId/flights'
    | '/{-$locale}/trip/$travelId/locations'
    | '/{-$locale}/trip/$travelId/members'
    | '/{-$locale}/trip/$travelId/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/{-$locale}/create-trip'
    | '/{-$locale}'
    | '/{-$locale}/auth/login'
    | '/{-$locale}/invite/$token'
    | '/{-$locale}/trip/$travelId'
    | '/{-$locale}/trip/$travelId/accommodations'
    | '/{-$locale}/trip/$travelId/concierge'
    | '/{-$locale}/trip/$travelId/financial'
    | '/{-$locale}/trip/$travelId/flights'
    | '/{-$locale}/trip/$travelId/locations'
    | '/{-$locale}/trip/$travelId/members'
    | '/{-$locale}/trip/$travelId/settings'
  id:
    | '__root__'
    | '/{-$locale}/create-trip'
    | '/{-$locale}/'
    | '/{-$locale}/auth/login'
    | '/{-$locale}/invite/$token'
    | '/{-$locale}/trip/$travelId'
    | '/{-$locale}/trip/$travelId/'
    | '/{-$locale}/trip/$travelId/accommodations/'
    | '/{-$locale}/trip/$travelId/concierge/'
    | '/{-$locale}/trip/$travelId/financial/'
    | '/{-$locale}/trip/$travelId/flights/'
    | '/{-$locale}/trip/$travelId/locations/'
    | '/{-$locale}/trip/$travelId/members/'
    | '/{-$locale}/trip/$travelId/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Char123LocaleChar125CreateTripRoute: typeof Char123LocaleChar125CreateTripRoute
  Char123LocaleChar125IndexRoute: typeof Char123LocaleChar125IndexRoute
  Char123LocaleChar125AuthLoginRoute: typeof Char123LocaleChar125AuthLoginRoute
  Char123LocaleChar125InviteTokenRoute: typeof Char123LocaleChar125InviteTokenRoute
  Char123LocaleChar125TripTravelIdRoute: typeof Char123LocaleChar125TripTravelIdRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/$': typeof ApiSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/$': typeof ApiSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/$': typeof ApiSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/$' | '/api/auth/$' | '/api/rpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/$' | '/api/auth/$' | '/api/rpc/$'
  id: '__root__' | '/api/$' | '/api/auth/$' | '/api/rpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiSplatServerRoute: typeof ApiSplatServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiRpcSplatServerRoute: typeof ApiRpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/{-$locale}/': {
      id: '/{-$locale}/'
      path: '/{-$locale}'
      fullPath: '/{-$locale}'
      preLoaderRoute: typeof Char123LocaleChar125IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$locale}/create-trip': {
      id: '/{-$locale}/create-trip'
      path: '/{-$locale}/create-trip'
      fullPath: '/{-$locale}/create-trip'
      preLoaderRoute: typeof Char123LocaleChar125CreateTripRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$locale}/trip/$travelId': {
      id: '/{-$locale}/trip/$travelId'
      path: '/{-$locale}/trip/$travelId'
      fullPath: '/{-$locale}/trip/$travelId'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$locale}/invite/$token': {
      id: '/{-$locale}/invite/$token'
      path: '/{-$locale}/invite/$token'
      fullPath: '/{-$locale}/invite/$token'
      preLoaderRoute: typeof Char123LocaleChar125InviteTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$locale}/auth/login': {
      id: '/{-$locale}/auth/login'
      path: '/{-$locale}/auth/login'
      fullPath: '/{-$locale}/auth/login'
      preLoaderRoute: typeof Char123LocaleChar125AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$locale}/trip/$travelId/': {
      id: '/{-$locale}/trip/$travelId/'
      path: '/'
      fullPath: '/{-$locale}/trip/$travelId/'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/settings/': {
      id: '/{-$locale}/trip/$travelId/settings/'
      path: '/settings'
      fullPath: '/{-$locale}/trip/$travelId/settings'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdSettingsIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/members/': {
      id: '/{-$locale}/trip/$travelId/members/'
      path: '/members'
      fullPath: '/{-$locale}/trip/$travelId/members'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdMembersIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/locations/': {
      id: '/{-$locale}/trip/$travelId/locations/'
      path: '/locations'
      fullPath: '/{-$locale}/trip/$travelId/locations'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdLocationsIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/flights/': {
      id: '/{-$locale}/trip/$travelId/flights/'
      path: '/flights'
      fullPath: '/{-$locale}/trip/$travelId/flights'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdFlightsIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/financial/': {
      id: '/{-$locale}/trip/$travelId/financial/'
      path: '/financial'
      fullPath: '/{-$locale}/trip/$travelId/financial'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdFinancialIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/concierge/': {
      id: '/{-$locale}/trip/$travelId/concierge/'
      path: '/concierge'
      fullPath: '/{-$locale}/trip/$travelId/concierge'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdConciergeIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
    '/{-$locale}/trip/$travelId/accommodations/': {
      id: '/{-$locale}/trip/$travelId/accommodations/'
      path: '/accommodations'
      fullPath: '/{-$locale}/trip/$travelId/accommodations'
      preLoaderRoute: typeof Char123LocaleChar125TripTravelIdAccommodationsIndexRouteImport
      parentRoute: typeof Char123LocaleChar125TripTravelIdRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface Char123LocaleChar125TripTravelIdRouteChildren {
  Char123LocaleChar125TripTravelIdIndexRoute: typeof Char123LocaleChar125TripTravelIdIndexRoute
  Char123LocaleChar125TripTravelIdAccommodationsIndexRoute: typeof Char123LocaleChar125TripTravelIdAccommodationsIndexRoute
  Char123LocaleChar125TripTravelIdConciergeIndexRoute: typeof Char123LocaleChar125TripTravelIdConciergeIndexRoute
  Char123LocaleChar125TripTravelIdFinancialIndexRoute: typeof Char123LocaleChar125TripTravelIdFinancialIndexRoute
  Char123LocaleChar125TripTravelIdFlightsIndexRoute: typeof Char123LocaleChar125TripTravelIdFlightsIndexRoute
  Char123LocaleChar125TripTravelIdLocationsIndexRoute: typeof Char123LocaleChar125TripTravelIdLocationsIndexRoute
  Char123LocaleChar125TripTravelIdMembersIndexRoute: typeof Char123LocaleChar125TripTravelIdMembersIndexRoute
  Char123LocaleChar125TripTravelIdSettingsIndexRoute: typeof Char123LocaleChar125TripTravelIdSettingsIndexRoute
}

const Char123LocaleChar125TripTravelIdRouteChildren: Char123LocaleChar125TripTravelIdRouteChildren =
  {
    Char123LocaleChar125TripTravelIdIndexRoute:
      Char123LocaleChar125TripTravelIdIndexRoute,
    Char123LocaleChar125TripTravelIdAccommodationsIndexRoute:
      Char123LocaleChar125TripTravelIdAccommodationsIndexRoute,
    Char123LocaleChar125TripTravelIdConciergeIndexRoute:
      Char123LocaleChar125TripTravelIdConciergeIndexRoute,
    Char123LocaleChar125TripTravelIdFinancialIndexRoute:
      Char123LocaleChar125TripTravelIdFinancialIndexRoute,
    Char123LocaleChar125TripTravelIdFlightsIndexRoute:
      Char123LocaleChar125TripTravelIdFlightsIndexRoute,
    Char123LocaleChar125TripTravelIdLocationsIndexRoute:
      Char123LocaleChar125TripTravelIdLocationsIndexRoute,
    Char123LocaleChar125TripTravelIdMembersIndexRoute:
      Char123LocaleChar125TripTravelIdMembersIndexRoute,
    Char123LocaleChar125TripTravelIdSettingsIndexRoute:
      Char123LocaleChar125TripTravelIdSettingsIndexRoute,
  }

const Char123LocaleChar125TripTravelIdRouteWithChildren =
  Char123LocaleChar125TripTravelIdRoute._addFileChildren(
    Char123LocaleChar125TripTravelIdRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  Char123LocaleChar125CreateTripRoute: Char123LocaleChar125CreateTripRoute,
  Char123LocaleChar125IndexRoute: Char123LocaleChar125IndexRoute,
  Char123LocaleChar125AuthLoginRoute: Char123LocaleChar125AuthLoginRoute,
  Char123LocaleChar125InviteTokenRoute: Char123LocaleChar125InviteTokenRoute,
  Char123LocaleChar125TripTravelIdRoute:
    Char123LocaleChar125TripTravelIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiSplatServerRoute: ApiSplatServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiRpcSplatServerRoute: ApiRpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
